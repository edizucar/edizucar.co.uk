
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"   # Redirect HTTP to HTTPS
      - "443:443" # HTTPS traffic
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d             # Custom configuration files
      - ./nginx/ssl:/etc/ssl                       # SSL certificates
      - ./www:/var/www/html                        # Website root directories
      - ./nginx/logs:/var/log/nginx                # Log files
      - ./goaccess:/var/log/goaccess
    networks:
      - reverse-proxy
    environment:
      - TZ=UTC  # Set timezone

  calibre:
    image: linuxserver/calibre-web
    container_name: calibre
    restart: unless-stopped
    environment:
      - PUID=1000  # Adjust as necessary
      - PGID=1000  # Adjust as necessary
      - TZ=Europe/London  # Set your timezone
    volumes:
      - ./calibre/config:/config  # Replace with your config path
      - ./calibre/books:/books  # Replace with your books path
    ports:
      - "8083:8083"
    networks:
      - reverse-proxy

  deluge:
    image: linuxserver/deluge:latest
    container_name: deluge
    restart: unless-stopped
    ports:
      - "8112:8112"
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846 #optional
    networks:
      - reverse-proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./deluge/config:/config
      - ./plex/media/:/media

  goaccess:
    image: allinurl/goaccess:latest
    container_name: goaccess
    restart: unless-stopped
    ports:
      - "7890:7890"  # WebSocket server for real-time updates
    volumes:
      - ./nginx/logs:/srv/logs:ro  # Mount Nginx logs as read-only
      - ./goaccess:/srv/report     # Store the GoAccess HTML report
    command: >
      /srv/logs/access.log
      --log-format=COMBINED
      --real-time-html
      --output=/srv/report/index.html
      --ws-url=wss://goaccess.edizucar.co.uk/ws
    networks:
      - reverse-proxy

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ./plex/config:/config
      - ./plex/media:/media
    ports:
      - "32400:32400"       # TCP port for Plex web interface
      - "1900:1900/udp"     # UDP port for DLNA
      - "53530:5353/udp"  # Use host port 53530 instead
      - "8324:8324"         # TCP port for Plex remote
      - "32410:32410/udp"   # UDP ports for Plex Discovery
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "32469:32469"       # TCP port for DLNA
    restart: unless-stopped
    networks:
      - reverse-proxy

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./sonarr/config:/config
      - ./plex/media/:/media
    ports:
      - "8989:8989"         # Sonarr web interface
    restart: unless-stopped
    networks:
      - reverse-proxy

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./radarr/config:/config
      - ./plex/media/:/media
    ports:
      - "7878:7878"         # Radarr web interface
    restart: unless-stopped
    networks:
      - reverse-proxy
  
  
networks:
  reverse-proxy:
    driver: bridge